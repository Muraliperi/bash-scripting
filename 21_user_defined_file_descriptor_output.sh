# File Descriptor number should be greater than 3.
# Storing /tmp/abcd.txt as value in variable 6>
[root@ansible-control-node bash_automation]# cat user_defined_file_descriptor_output.sh
[root@ansible-control-node bash_automation]# exec 6> /tmp/abcd.txt
[root@ansible-control-node bash_automation]# echo "Hello world!" >&6
[root@ansible-control-node bash_automation]# uptime >&6
[root@ansible-control-node bash_automation]# date >&6
[root@ansible-control-node bash_automation]# hostname -i >&6
[root@ansible-control-node bash_automation]# cat /tmp/abcd.txt
Hello world!
 03:38:00 up  4:09,  1 user,  load average: 0.00, 0.03, 0.00
Mon Sep  9 03:38:04 EDT 2024
192.168.43.90
[root@ansible-control-node bash_automation]#
[root@ansible-control-node bash_automation]#
------------------------------------------------------------------------------------------
[root@ansible-control-node bash_automation]# cat user_defined_file_descriptor_input_cli.sh
# Input file should be present
# we can use fd number to perform any actions
[root@ansible-control-node bash_automation]# touch /tmp/xxyyzz.txt
[root@ansible-control-node bash_automation]# exec 10< /tmp/xxyyzz.txt
[root@ansible-control-node bash_automation]# cat <&10
[root@ansible-control-node bash_automation]# vim /tmp/xxyyzz.txt
[root@ansible-control-node bash_automation]# cat <&10
Hello, Edited this file to play with File descriptor for input
[root@ansible-control-node bash_automation]#
[root@ansible-control-node bash_automation]#
-------------------------------------------------------------------------------------------
#!/bin/bash
# The file descriptor to file for output.
# File Descriptor number should be greater than 3. Here we are using 5. We can use any number.
# The output can be not exist. If not exist it will create new file.
exec 5> /tmp/file_descriptor_out.txt
uname >&5
uptime >&5
date >&5
echo "This is a test file for descriptor output" >&5
# To close this file descriptor you can use "exec 5>&-"
-----------------------------------------------------------------------------------------
[root@ansible-control-node bash_automation]# cat file_descriptor_output.sh
#!/bin/bash
# The file descriptor to file for output.
# File Descriptor number should be greater than 3. Here we are using 5. We can use any number.
# The output can be not exist. If not exist it will create new file.
exec 5> /tmp/file_descriptor_out.txt
uname >&5
uptime >&5
date >&5
echo "This is a test file for descriptor output" >&5

# To close this file descriptor you can use "exec 5>&-"
[root@ansible-control-node bash_automation]# cat user_defined_file_descriptor_input.sh
# User File descriptor number should be always greater than 3
# To user defined file descriptor(fd) for input, the input file should exist.
# Benefit: Once we created fd, we can reference it's number to perform any actions such as cat, ls, rm, mv
[root@ansible-control-node bash_automation]# exec 8< /tmp/defgh.txt
-bash: /tmp/defgh.txt: No such file or directory
[root@ansible-control-node bash_automation]# exec 8< /etc/resolv.conf
[root@ansible-control-node bash_automation]# cat <&8
# Generated by NetworkManager
nameserver 192.168.43.1
nameserver 2409:408c:8e37:2fb5::94
nameserver 2409:408c:8e37:2fb5::6a
[root@ansible-control-node bash_automation]#

# To close this file descriptor, we need to use fd_no<&-. Examples are below
#
[root@ansible-control-node bash_automation]# exec 8< /etc/resolv.conf
[root@ansible-control-node bash_automation]# cat <&8
# Generated by NetworkManager
nameserver 192.168.43.1
[root@ansible-control-node bash_automation]# exec 8<&-
[root@ansible-control-node bash_automation]# cat <&8
-bash: 8: Bad file descriptor
[root@ansible-control-node bash_automation]#

#
# Below commands will delete the user defined file descriptor
[root@ansible-control-node bash_automation]# exec 5<&-
[root@ansible-control-node bash_automation]# exec 6<&-
[root@ansible-control-node bash_automation]# exec 7<&-
[root@ansible-control-node bash_automation]# exec 9<&-
[root@ansible-control-node bash_automation]# exec 10<&-
[root@ansible-control-node bash_automation]# exec 11<&-
[root@ansible-control-node bash_automation]# cat <&11
-bash: 11: Bad file descriptor
[root@ansible-control-node bash_automation]#
[root@ansible-control-node bash_automation]#
